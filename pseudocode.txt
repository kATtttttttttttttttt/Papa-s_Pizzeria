// Papa Pizza Ordering System

// -------------------------
// classes
// -------------------------

CLASS pizza
    name(string)
    price(float)
    FUNCTION __init__(self, name, price)
        self.name = name
        self.price = price 
    END FUNCTION
END CLASS

CLASS orders
    FUNCTION __init__(self)
        self.pizza = []
        self.delivery = false
        self.loyalty = false
        self.subtotal = 0.0
    END FUNCTION

    //[option 2 from menu] Program for selecting pizzas for the order 
    FUNCTION add(self, pizza, quantity)
        APPEND self.pizza FOR (pizza, quantity)
        self.subtotal += pizza.price * quantity
    END FUNCTION

    //[option 2 from menu] optional delivery ($8)
    FUNCTION delv(self, delivery)
        self.delivery = delivery 
        IF delivery is true add 8.00 TO self.subtotal
    END FUNCTION

    //[option 2 from menu] optional loyalty card inclusion (10% off)
    FUNCTION loy(self, loyalty)
        self.loyalty = loyalty
    END FUNCTION

    //if a loyalty card or the order is about $100 5% discount is applied  
    FUNCTION discount(self)
        IF self.subtotal > 100 OR self.loyalty == true
            RETURN self.subtotal * 0.95
    END FUNCTION

    //adding the gst tax to when selecting the order (10%)
    FUNCTION gst(self)
        RETURN self.discount() * 0.1
    END FUNCTION
    
    //adding the discount and gst to get the total
    FUNCTION total(self):
        RETURN self.discount() + self.gst()
    END FUNCTION

    //printing out the order details
    FUNCTION order_details(self)
        PRINT "\nDetails"
        FOR pizza, quantity in self.pizza
            PRINT f"{pizza.name} | Quantity: {quantity}"
        END FOR
        PRINT f"Subtotal: ${self.subtotal:.2f}"
        PRINT f"Delivery: ${self.delivery * 8.0:.2f}"
        PRINT f"GST: ${self.gst():.2f}"
        PRINT f"Total: ${self.total():.2f}\n"
    END FUNCTION

// -------------------------
// Subprograms
// -------------------------

FUNCTION main()
    pizzas = {
        //write data dictionary of pizzas
    }
    
    order.orders()

    WHILE true
        PRINT "\nOrdering System: " //Title of menu
        //list the menu items...
    END WHILE
    INPUT(choice)
    
    IF choice is "1"
        PRINT "Menu: "
        PRINT //##items from data dictionary go here##

    ELIF choice is "2"
        INPUT(pizza_type)
        INPUT(quantity)
        IF pizza_type IN pizzas //data dictionary name is pizzas
            //store pizza_type in memory + check if pizza is in data dictionary
        ELSE
            PRINT "Invalid"
        
        INPUT(delivery)
            CALL delv(delivery)
        INPUT(loyalty)
            CALL loy(loyalty)
        INPUT(order_details)
            CALL order_details()

    ELIF choice is "3"
        IF no orders are present 
            PRINT "No orders"
        ELSE 
            PRINT //order summary structure

        WRITE TO order_summary.txt

        PRINT "Order summary has been saved"

    ELIF choice is "4"
        PRINT contents in order_summary.txt

    ELIF choice is "5"
        break WHILE

    ELSE:
     PRINT "Invalid"

// -------------------------
// Main program
// -------------------------

CALL main()
